/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.moderntech.views;

import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.security.auth.callback.ConfirmationCallback;
import javax.swing.table.DefaultTableModel;
import lk.ijse.moderntech.controler.UpdateEmployeeController;
import lk.ijse.moderntech.controler.UpdateInterface;
import lk.ijse.moderntech.model.EmployeeModel;

/**
 *
 * @author Shamal
 */
public class UpdateEmployee extends javax.swing.JInternalFrame implements UpdateInterface {

    boolean state;

    public UpdateEmployee(boolean state) {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.state = state;
        setTheam();
        loadAllEmployees();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel();
        lblEmployeeid = new javax.swing.JLabel();
        txtEmployeeid = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblRole = new javax.swing.JLabel();
        cmbRole = new javax.swing.JComboBox<>();
        lblContact = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        btnClear = new keeptoo.KButton();
        btnUpdate = new keeptoo.KButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1310, 820));

        pnlBack.setBackground(new java.awt.Color(255, 255, 255));
        pnlBack.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblEmployeeid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblEmployeeid.setText("Employee ID :");
        pnlBack.add(lblEmployeeid, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, -1, -1));

        txtEmployeeid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtEmployeeid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtEmployeeid, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 320, -1));

        lblName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblName.setText("Name :");
        pnlBack.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1, -1));

        txtName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 320, -1));

        lblEmail.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblEmail.setText("Email :");
        pnlBack.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, -1, -1));

        txtEmail.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, 320, -1));

        lblAddress.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblAddress.setText("Address :");
        pnlBack.add(lblAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, -1, -1));

        txtAddress.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, 820, -1));

        lblRole.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblRole.setText("Role :");
        pnlBack.add(lblRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 170, 50, -1));

        cmbRole.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Salesman", "Repairman" }));
        pnlBack.add(cmbRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 170, 320, 30));

        lblContact.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblContact.setText("Contact no :");
        pnlBack.add(lblContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 110, -1, -1));

        txtContact.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtContact.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 110, 320, -1));

        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 46, 50)));
        btnClear.setForeground(new java.awt.Color(255, 46, 50));
        btnClear.setText("Clear");
        btnClear.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnClear.setkAllowGradient(false);
        btnClear.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btnClear.setkBorderRadius(0);
        btnClear.setkForeGround(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverColor(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlBack.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 280, -1, -1));

        btnUpdate.setBorder(null);
        btnUpdate.setText("Update");
        btnUpdate.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnUpdate.setkAllowGradient(false);
        btnUpdate.setkBackGroundColor(new java.awt.Color(226, 141, 13));
        btnUpdate.setkBorderRadius(0);
        btnUpdate.setkHoverColor(new java.awt.Color(217, 90, 32));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlBack.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 280, -1, -1));

        tblEmployee.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Name", "Contact no", "Email", "Address", "Role"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.setRowHeight(20);
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);

        pnlBack.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 350, 1270, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
        loadAllEmployees();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        EmployeeModel employee = new EmployeeModel(
                txtEmployeeid.getText(),
                txtName.getText(),
                txtContact.getText(),
                txtEmail.getText(),
                txtAddress.getText(),
                cmbRole.getSelectedItem().toString()
        );
        try {
            boolean updated = new UpdateEmployeeController().updateEmployee(employee);
            if(updated){
                new InformationBox(new javax.swing.JFrame(), true, "Updated successfully.").setVisible(true);
            }else{
                new InformationBox(new javax.swing.JFrame(), true, "Something went wrong, Try again.").setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        int row = tblEmployee.getSelectedRow();
        txtEmployeeid.setText(tblEmployee.getValueAt(row, 0).toString());
        txtName.setText(tblEmployee.getValueAt(row, 1).toString());
        txtContact.setText(tblEmployee.getValueAt(row, 2).toString());
        txtEmail.setText(tblEmployee.getValueAt(row, 3).toString());
        txtAddress.setText(tblEmployee.getValueAt(row, 4).toString());
        cmbRole.setSelectedItem(tblEmployee.getValueAt(row, 5));

    }//GEN-LAST:event_tblEmployeeMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnClear;
    private keeptoo.KButton btnUpdate;
    private javax.swing.JComboBox<String> cmbRole;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmployeeid;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblRole;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmployeeid;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void setTheam() {
        if (state) {
            pnlBack.setBackground(Color.BLACK);
            lblAddress.setForeground(Color.WHITE);
            lblContact.setForeground(Color.WHITE);
            lblEmail.setForeground(Color.WHITE);
            lblEmployeeid.setForeground(Color.WHITE);
            lblName.setForeground(Color.WHITE);
            lblRole.setForeground(Color.WHITE);
            cmbRole.setForeground(Color.WHITE);
            txtAddress.setForeground(Color.WHITE);
            txtContact.setForeground(Color.WHITE);
            txtEmail.setForeground(Color.WHITE);
            txtEmployeeid.setForeground(Color.WHITE);
            txtName.setForeground(Color.WHITE);
            cmbRole.setBackground(Color.BLACK);
            txtAddress.setBackground(Color.BLACK);
            txtContact.setBackground(Color.BLACK);
            txtEmail.setBackground(Color.BLACK);
            txtEmployeeid.setBackground(Color.BLACK);
            txtName.setBackground(Color.BLACK);

        } else {
        }
    }

    private void loadAllEmployees() {
        try {
            List<EmployeeModel> list = new UpdateEmployeeController().getEmployees();
            DefaultTableModel model = (DefaultTableModel) tblEmployee.getModel();
            model.setRowCount(0);

            for (EmployeeModel employeeModel : list) {
                model.addRow(new Object[]{
                    employeeModel.getEmployeeID(),
                    employeeModel.getName(),
                    employeeModel.getContactNo(),
                    employeeModel.getEmail(),
                    employeeModel.getAddress(),
                    employeeModel.getRole()
                });
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }

    private void clearAll() {
        txtAddress.setText("");
        txtContact.setText("");
        txtEmail.setText("");
        txtEmployeeid.setText("");
        txtName.setText("");
        cmbRole.setSelectedIndex(0);
    }

    @Override
    public void update() {

    }
}
