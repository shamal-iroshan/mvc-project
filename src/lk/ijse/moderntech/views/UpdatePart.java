/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.moderntech.views;

import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.ijse.moderntech.controler.UpdatePartController;
import lk.ijse.moderntech.model.PartModel;

/**
 *
 * @author Shamal
 */
public class UpdatePart extends javax.swing.JInternalFrame {

    boolean state;

    public UpdatePart(boolean state) {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.state = state;
        setTheam();
        loadWarranty();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel();
        lblComputerid = new javax.swing.JLabel();
        txtPartid = new javax.swing.JTextField();
        lblWarranty = new javax.swing.JLabel();
        cmbWarranty = new javax.swing.JComboBox<>();
        lblValue = new javax.swing.JLabel();
        txtValue = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        btnClear = new keeptoo.KButton();
        txtBrand = new javax.swing.JTextField();
        lblBrand = new javax.swing.JLabel();
        lblPartname = new javax.swing.JLabel();
        txtPartname = new javax.swing.JTextField();
        btnUpdate = new keeptoo.KButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPart = new javax.swing.JTable();

        setBorder(null);

        pnlBack.setBackground(new java.awt.Color(255, 255, 255));
        pnlBack.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblComputerid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblComputerid.setText("Part ID :");
        pnlBack.add(lblComputerid, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        txtPartid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtPartid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        txtPartid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPartidActionPerformed(evt);
            }
        });
        pnlBack.add(txtPartid, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 320, -1));

        lblWarranty.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblWarranty.setText("Warranty :");
        pnlBack.add(lblWarranty, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 110, -1, -1));

        cmbWarranty.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbWarranty.setBorder(null);
        pnlBack.add(cmbWarranty, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 320, 40));

        lblValue.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblValue.setText("Value :");
        pnlBack.add(lblValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, -1, -1));

        txtValue.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtValue.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtValue, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, 320, -1));

        lblDescription.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblDescription.setText("Description :");
        pnlBack.add(lblDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, -1, -1));

        txtDescription.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtDescription.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 870, -1));

        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 46, 50)));
        btnClear.setForeground(new java.awt.Color(255, 46, 50));
        btnClear.setText("Clear");
        btnClear.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnClear.setkAllowGradient(false);
        btnClear.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btnClear.setkBorderRadius(0);
        btnClear.setkForeGround(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverColor(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlBack.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 310, -1, -1));

        txtBrand.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtBrand.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 180, 320, -1));

        lblBrand.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblBrand.setText("Brand :");
        pnlBack.add(lblBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 180, -1, -1));

        lblPartname.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblPartname.setText("Part name :");
        pnlBack.add(lblPartname, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 110, -1, -1));

        txtPartname.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtPartname.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtPartname, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 110, 320, -1));

        btnUpdate.setBorder(null);
        btnUpdate.setText("Update");
        btnUpdate.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnUpdate.setkAllowGradient(false);
        btnUpdate.setkBackGroundColor(new java.awt.Color(226, 141, 13));
        btnUpdate.setkBorderRadius(0);
        btnUpdate.setkHoverColor(new java.awt.Color(217, 90, 32));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlBack.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 310, -1, -1));

        tblPart.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        tblPart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Part ID", "Warranty", "Part name", "Value", "Brand", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPart.setRowHeight(20);
        tblPart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPartMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPart);

        pnlBack.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 370, 1260, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblPartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPartMouseClicked
        int row = tblPart.getSelectedRow();
        txtPartid.setText(tblPart.getValueAt(row, 0).toString());
        cmbWarranty.setSelectedItem(tblPart.getValueAt(row, 1));
        txtPartname.setText(tblPart.getValueAt(row, 2).toString());
        txtValue.setText(tblPart.getValueAt(row, 3).toString());
        txtBrand.setText(tblPart.getValueAt(row, 4).toString());
        txtDescription.setText(tblPart.getValueAt(row, 5).toString());
    }//GEN-LAST:event_tblPartMouseClicked

    private void txtPartidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPartidActionPerformed
        if (txtPartid.getText().trim().length() > 0) {
            try {
                PartModel part = new UpdatePartController().getParts(txtPartid.getText());
                if (part != null) {
                    txtPartid.setText(part.getPartID());
                    cmbWarranty.setSelectedItem(part.getWarrantyID());
                    txtPartname.setText(part.getPartName());
                    txtValue.setText(part.getValue());
                    txtBrand.setText(part.getBrand());
                    txtDescription.setText(part.getDescription());
                }

            } catch (ClassNotFoundException ex) {
                new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
            } catch (SQLException ex) {
                new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
            }
        }
    }//GEN-LAST:event_txtPartidActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        PartModel part = new PartModel(
                txtPartid.getText(),
                cmbWarranty.getSelectedItem().toString(),
                txtPartname.getText(),
                txtValue.getText(),
                txtBrand.getText(),
                txtDescription.getText()
        );
        try {
            boolean updated = new UpdatePartController().updatePart(part);
            if (updated) {
                new InformationBox(new javax.swing.JFrame(), true, "Updated successfully.").setVisible(true);
            } else {
                new InformationBox(new javax.swing.JFrame(), true, "Something went wrong, Try again.").setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnClear;
    private keeptoo.KButton btnUpdate;
    private javax.swing.JComboBox<String> cmbWarranty;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblComputerid;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblPartname;
    private javax.swing.JLabel lblValue;
    private javax.swing.JLabel lblWarranty;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JTable tblPart;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtDescription;
    private javax.swing.JTextField txtPartid;
    private javax.swing.JTextField txtPartname;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables

    private void setTheam() {
        if (state) {
            pnlBack.setBackground(Color.BLACK);
            lblBrand.setForeground(Color.WHITE);
            lblComputerid.setForeground(Color.WHITE);
            lblDescription.setForeground(Color.WHITE);
            lblPartname.setForeground(Color.WHITE);
            lblValue.setForeground(Color.WHITE);
            lblWarranty.setForeground(Color.WHITE);
            cmbWarranty.setForeground(Color.WHITE);
            cmbWarranty.setBackground(Color.BLACK);
            txtBrand.setForeground(Color.WHITE);
            txtPartid.setForeground(Color.WHITE);
            txtDescription.setForeground(Color.WHITE);
            txtPartname.setForeground(Color.WHITE);
            txtValue.setForeground(Color.WHITE);
            txtBrand.setBackground(Color.BLACK);
            txtPartid.setBackground(Color.BLACK);
            txtDescription.setBackground(Color.BLACK);
            txtPartname.setBackground(Color.BLACK);
            txtValue.setBackground(Color.BLACK);
        } else {

        }
    }

    private void loadWarranty() {
        try {
            List<String> list = new UpdatePartController().getWarranty();
            for (String string : list) {
                cmbWarranty.addItem(string);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }

    private void clearAll() {
        txtBrand.setText("");
        txtPartid.setText("");
        txtDescription.setText("");
        txtPartname.setText("");
        txtValue.setText("");
        cmbWarranty.setSelectedIndex(0);
    }

    private void loadTable() {
        try {
            List<PartModel> part = new UpdatePartController().getParts();
            DefaultTableModel model = (DefaultTableModel) tblPart.getModel();
            model.setRowCount(0);

            for (PartModel partModel : part) {
                model.addRow(new Object[]{
                    partModel.getPartID(),
                    partModel.getWarrantyID(),
                    partModel.getPartName(),
                    partModel.getValue(),
                    partModel.getBrand(),
                    partModel.getDescription()
                });
            }

        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }
}
