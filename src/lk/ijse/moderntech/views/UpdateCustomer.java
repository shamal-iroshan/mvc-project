/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.moderntech.views;

import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import lk.ijse.moderntech.controler.UpdateCustomerController;
import lk.ijse.moderntech.model.CustomerModel;

/**
 *
 * @author Shamal
 */
public class UpdateCustomer extends javax.swing.JInternalFrame {

    boolean state;

    public UpdateCustomer(boolean state) {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.state = state;
        setTheam();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel();
        lblCustomerid = new javax.swing.JLabel();
        txtCustomerid = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAdress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblContact = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        btnUpdate = new keeptoo.KButton();
        btnClear = new keeptoo.KButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCustomer = new javax.swing.JTable();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1310, 820));

        pnlBack.setBackground(new java.awt.Color(255, 255, 255));
        pnlBack.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCustomerid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblCustomerid.setText("Customer ID :");
        pnlBack.add(lblCustomerid, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, -1, -1));

        txtCustomerid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtCustomerid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        txtCustomerid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomeridActionPerformed(evt);
            }
        });
        pnlBack.add(txtCustomerid, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 320, -1));

        lblName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblName.setText("Name :");
        pnlBack.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, -1, -1));

        txtName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 320, -1));

        lblAdress.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblAdress.setText("Address :");
        pnlBack.add(lblAdress, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, -1, -1));

        txtAddress.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtAddress, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 870, -1));

        lblContact.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblContact.setText("Contact no :");
        pnlBack.add(lblContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, -1, -1));

        txtContact.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtContact.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 130, 330, -1));

        btnUpdate.setBorder(null);
        btnUpdate.setText("Update");
        btnUpdate.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnUpdate.setkAllowGradient(false);
        btnUpdate.setkBackGroundColor(new java.awt.Color(226, 141, 13));
        btnUpdate.setkBorderRadius(0);
        btnUpdate.setkHoverColor(new java.awt.Color(217, 90, 32));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlBack.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 260, -1, -1));

        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 46, 50)));
        btnClear.setForeground(new java.awt.Color(255, 46, 50));
        btnClear.setText("Clear");
        btnClear.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnClear.setkAllowGradient(false);
        btnClear.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btnClear.setkBorderRadius(0);
        btnClear.setkForeGround(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverColor(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlBack.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 260, -1, -1));

        tblCustomer.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        tblCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Name", "Contact no", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCustomer.setRowHeight(20);
        tblCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCustomerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCustomer);

        pnlBack.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 330, 1270, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
        loadTable();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        //WarningBox<UpdateCustomer> customer = new WarningBox(new javax.swing.JFrame(), true);

        CustomerModel customer = new CustomerModel(
                txtCustomerid.getText(),
                txtName.getText(),
                txtContact.getText(),
                txtAddress.getText()
        );

        try {
            boolean update = new UpdateCustomerController().updateCustomer(customer);
            if (update) {
                new InformationBox(new javax.swing.JFrame(), true, "Updated succsessfully.").setVisible(true);
            } else {
                new InformationBox(new javax.swing.JFrame(), true, "Something went wrong, try again.").setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
        loadTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtCustomeridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomeridActionPerformed
       if(txtCustomerid.getText().trim().length() > 0){
           try {
               CustomerModel customer = new UpdateCustomerController().getCustomer(txtCustomerid.getText());
               if(customer != null){
                   txtCustomerid.setText(customer.getCustomerID());
                   txtContact.setText(customer.getContactNo());
                   txtName.setText(customer.getName());
                   txtAddress.setText(customer.getAddress());
                   
                   DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
                   model.setRowCount(0);
                   model.addRow(new Object[]{
                       customer.getCustomerID(),
                       customer.getName(),
                       customer.getContactNo(),
                       customer.getAddress()
                   });
               }else{
                   new InformationBox(new javax.swing.JFrame(), true, "Check customer ID.").setVisible(true);
               }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
       }else{
           new InformationBox(new javax.swing.JFrame(), true, "Please enter customer ID.").setVisible(true);
       }
    }//GEN-LAST:event_txtCustomeridActionPerformed

    private void tblCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCustomerMouseClicked
        int row = tblCustomer.getSelectedRow();
        txtCustomerid.setText(tblCustomer.getValueAt(row, 0).toString());
        txtName.setText(tblCustomer.getValueAt(row, 1).toString());
        txtContact.setText(tblCustomer.getValueAt(row, 2).toString());
        txtAddress.setText(tblCustomer.getValueAt(row, 3).toString());
    }//GEN-LAST:event_tblCustomerMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnClear;
    private keeptoo.KButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAdress;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblCustomerid;
    private javax.swing.JLabel lblName;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JTable tblCustomer;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtCustomerid;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

    private void setTheam() {
        if (state) {
            pnlBack.setBackground(Color.BLACK);
            lblAdress.setForeground(Color.WHITE);
            lblContact.setForeground(Color.WHITE);
            lblCustomerid.setForeground(Color.WHITE);
            lblName.setForeground(Color.WHITE);
            txtAddress.setBackground(Color.BLACK);
            txtContact.setBackground(Color.BLACK);
            txtCustomerid.setBackground(Color.BLACK);
            txtName.setBackground(Color.BLACK);
            txtAddress.setForeground(new Color(230, 230, 230));
            txtContact.setForeground(new Color(230, 230, 230));
            txtCustomerid.setForeground(new Color(230, 230, 230));
            txtName.setForeground(new Color(230, 230, 230));

        } else {
        }
    }

    private void loadTable() {
        try {
            List<CustomerModel> list = new UpdateCustomerController().getAllCustomer();
            DefaultTableModel model = (DefaultTableModel) tblCustomer.getModel();
            model.setRowCount(0);
            
            for (CustomerModel customerModel : list) {
                model.addRow(new Object[]{
                    customerModel.getCustomerID(),
                    customerModel.getName(),
                    customerModel.getContactNo(),
                    customerModel.getAddress()
                });
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }

    private void clearAll() {
        txtAddress.setText("");
        txtContact.setText("");
        txtCustomerid.setText("");
        txtName.setText("");
    }
    public void update(){
        CustomerModel customer = new CustomerModel(
                txtCustomerid.getText(),
                txtName.getText(),
                txtContact.getText(),
                txtAddress.getText()
        );
        
        try {
            boolean update = new UpdateCustomerController().updateCustomer(customer);
            if(update){
                new InformationBox(new javax.swing.JFrame(), true, "Updated succsessfully.").setVisible(true);
            }else{
                new InformationBox(new javax.swing.JFrame(), true,"Something went wrong, try again.").setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
        loadTable();        
    }
}
