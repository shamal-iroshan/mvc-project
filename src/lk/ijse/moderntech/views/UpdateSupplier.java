/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.moderntech.views;

import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import lk.ijse.moderntech.controler.UpdateSupplierController;
import lk.ijse.moderntech.model.SupplierModel;

/**
 *
 * @author Shamal
 */
public class UpdateSupplier extends javax.swing.JInternalFrame {

    boolean state;

    public UpdateSupplier(boolean state) {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.state = state;
        setTheam();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel();
        lblSupplierid = new javax.swing.JLabel();
        txtSupplierid = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblDetail = new javax.swing.JLabel();
        txtDetail = new javax.swing.JTextField();
        lblContact = new javax.swing.JLabel();
        txtContact = new javax.swing.JTextField();
        btnClear = new keeptoo.KButton();
        btnUpdate = new keeptoo.KButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1310, 820));

        pnlBack.setBackground(new java.awt.Color(255, 255, 255));
        pnlBack.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSupplierid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblSupplierid.setText("Supplier ID :");
        pnlBack.add(lblSupplierid, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 40, -1, -1));

        txtSupplierid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtSupplierid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        txtSupplierid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSupplieridActionPerformed(evt);
            }
        });
        pnlBack.add(txtSupplierid, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 40, 320, -1));

        lblName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblName.setText("Name :");
        pnlBack.add(lblName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 70, -1));

        txtName.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 320, -1));

        lblDetail.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblDetail.setText("Detail :");
        pnlBack.add(lblDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, -1, -1));

        txtDetail.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtDetail.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtDetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 870, -1));

        lblContact.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblContact.setText("Contact no :");
        pnlBack.add(lblContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 120, -1, -1));

        txtContact.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtContact.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtContact, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 120, 330, -1));

        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 46, 50)));
        btnClear.setForeground(new java.awt.Color(255, 46, 50));
        btnClear.setText("Clear");
        btnClear.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnClear.setkAllowGradient(false);
        btnClear.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btnClear.setkBorderRadius(0);
        btnClear.setkForeGround(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverColor(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlBack.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 250, -1, -1));

        btnUpdate.setBorder(null);
        btnUpdate.setText("Update");
        btnUpdate.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnUpdate.setkAllowGradient(false);
        btnUpdate.setkBackGroundColor(new java.awt.Color(226, 141, 13));
        btnUpdate.setkBorderRadius(0);
        btnUpdate.setkHoverColor(new java.awt.Color(217, 90, 32));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlBack.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 250, -1, -1));

        tblSupplier.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Supplier ID", "Name", "Contact no", "Detail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSupplier.setRowHeight(20);
        tblSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupplierMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSupplier);

        pnlBack.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 330, 1270, 450));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
        loadTable();
    }//GEN-LAST:event_btnClearActionPerformed

    private void tblSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseClicked
        int row = tblSupplier.getSelectedRow();
        txtSupplierid.setText(tblSupplier.getValueAt(row, 0).toString());
        txtName.setText(tblSupplier.getValueAt(row, 1).toString());
        txtContact.setText(tblSupplier.getValueAt(row, 2).toString());
        txtDetail.setText(tblSupplier.getValueAt(row, 3).toString());
    }//GEN-LAST:event_tblSupplierMouseClicked

    private void txtSupplieridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSupplieridActionPerformed
        if (txtSupplierid.getText().trim().length() > 0) {
            try {
                SupplierModel supplier = new UpdateSupplierController().getSupplier(txtSupplierid.getText());
                if (supplier != null) {
                    txtSupplierid.setText(supplier.getSupplierID());
                    txtName.setText(supplier.getName());
                    txtContact.setText(supplier.getContactNo());
                    txtDetail.setText(supplier.getDetail());

                    DefaultTableModel model = (DefaultTableModel) tblSupplier.getModel();
                    model.setRowCount(0);
                    model.addRow(new Object[]{
                        supplier.getSupplierID(),
                        supplier.getName(),
                        supplier.getContactNo(),
                        supplier.getDetail()
                    });
                }
            } catch (ClassNotFoundException ex) {
                new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
            } catch (SQLException ex) {
                new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
            }
        } else {
            new InformationBox(new javax.swing.JFrame(), true, "Enter supplier ID.").setVisible(true);
        }
    }//GEN-LAST:event_txtSupplieridActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        SupplierModel supplier = new SupplierModel(
                txtSupplierid.getText(),
                txtName.getText(),
                txtContact.getText(),
                txtDetail.getText()
        );
        try {
            boolean isUpdated = new UpdateSupplierController().updateSupplier(supplier);
            if (isUpdated) {
                new InformationBox(new javax.swing.JFrame(), true, "Updated successfully.").setVisible(true);
            } else {
                new InformationBox(new javax.swing.JFrame(), true, "Something went wrong, Try again.").setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
        loadTable();
    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnClear;
    private keeptoo.KButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblDetail;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSupplierid;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JTable tblSupplier;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtDetail;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSupplierid;
    // End of variables declaration//GEN-END:variables

    private void setTheam() {
        if (state) {
            pnlBack.setBackground(Color.BLACK);
            lblDetail.setForeground(Color.WHITE);
            lblContact.setForeground(Color.WHITE);
            lblSupplierid.setForeground(Color.WHITE);
            lblName.setForeground(Color.WHITE);
            txtDetail.setBackground(Color.BLACK);
            txtContact.setBackground(Color.BLACK);
            txtSupplierid.setBackground(Color.BLACK);
            txtName.setBackground(Color.BLACK);
            txtDetail.setForeground(new Color(230, 230, 230));
            txtContact.setForeground(new Color(230, 230, 230));
            txtSupplierid.setForeground(new Color(230, 230, 230));
            txtName.setForeground(new Color(230, 230, 230));

        } else {
        }
    }

    private void clearAll() {
        txtContact.setText("");
        txtDetail.setText("");
        txtName.setText("");
        txtSupplierid.setText("");
    }

    private void loadTable() {
        try {
            List<SupplierModel> list = new UpdateSupplierController().getAllSuppliers();
            DefaultTableModel model = (DefaultTableModel) tblSupplier.getModel();
            model.setRowCount(0);

            for (SupplierModel supplierModel : list) {
                model.addRow(new Object[]{
                    supplierModel.getSupplierID(),
                    supplierModel.getName(),
                    supplierModel.getContactNo(),
                    supplierModel.getDetail()
                });
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }
}
