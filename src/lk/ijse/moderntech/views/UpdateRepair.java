/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.moderntech.views;

import java.awt.Color;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import lk.ijse.moderntech.controler.UpdateRepairController;
import lk.ijse.moderntech.model.RepairModel;

/**
 *
 * @author Shamal
 */
public class UpdateRepair extends javax.swing.JInternalFrame {

    boolean state;

    public UpdateRepair(boolean state) {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.state = state;
        setTheam();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel();
        lblRepairid = new javax.swing.JLabel();
        txtRepairid = new javax.swing.JTextField();
        lblRepairdescription = new javax.swing.JLabel();
        txtRepairtdescription = new javax.swing.JTextField();
        btnClear = new keeptoo.KButton();
        lblRepairstatus = new javax.swing.JLabel();
        cmbRepairStatus = new javax.swing.JComboBox<>();
        lblPrice = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnUpdate = new keeptoo.KButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRepair = new javax.swing.JTable();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1310, 820));

        pnlBack.setBackground(new java.awt.Color(255, 255, 255));
        pnlBack.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblRepairid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblRepairid.setText("Repair ID :");
        pnlBack.add(lblRepairid, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 70, -1, -1));

        txtRepairid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtRepairid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        txtRepairid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRepairidActionPerformed(evt);
            }
        });
        pnlBack.add(txtRepairid, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, 320, -1));

        lblRepairdescription.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblRepairdescription.setText("Repair description :");
        pnlBack.add(lblRepairdescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 130, -1, -1));

        txtRepairtdescription.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtRepairtdescription.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtRepairtdescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 870, -1));

        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 46, 50)));
        btnClear.setForeground(new java.awt.Color(255, 46, 50));
        btnClear.setText("Clear");
        btnClear.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnClear.setkAllowGradient(false);
        btnClear.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btnClear.setkBorderRadius(0);
        btnClear.setkForeGround(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverColor(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlBack.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 320, -1, -1));

        lblRepairstatus.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblRepairstatus.setText("Repair status :");
        pnlBack.add(lblRepairstatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, -1, -1));

        cmbRepairStatus.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbRepairStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Checked", "Repaired", "Need aprovel", "Can't repair" }));
        cmbRepairStatus.setBorder(null);
        pnlBack.add(cmbRepairStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 190, 250, 30));

        lblPrice.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblPrice.setText("Price :");
        pnlBack.add(lblPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 260, -1, -1));

        txtPrice.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtPrice.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 320, -1));

        btnUpdate.setBorder(null);
        btnUpdate.setText("Update");
        btnUpdate.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnUpdate.setkAllowGradient(false);
        btnUpdate.setkBackGroundColor(new java.awt.Color(226, 141, 13));
        btnUpdate.setkBorderRadius(0);
        btnUpdate.setkHoverColor(new java.awt.Color(217, 90, 32));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        pnlBack.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 320, -1, -1));

        tblRepair.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        tblRepair.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Repair ID", "Employee ID", "Customer ID", "Repair status", "Repair description", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRepair.setRowHeight(20);
        tblRepair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblRepairMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblRepair);

        pnlBack.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 1270, 390));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, 1310, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        RepairModel model = new RepairModel(
                txtRepairid.getText(),
                null,
                null,
                cmbRepairStatus.getSelectedItem().toString(),
                txtRepairtdescription.getText(),
                txtPrice.getText()
        );
        try {
            boolean updated = new UpdateRepairController().updateRepair(model);
            if(updated){
                new InformationBox(new javax.swing.JFrame(), true, "Updated successfully.").setVisible(true);
            }else{
                new InformationBox(new javax.swing.JFrame(), true, "Something went wrong, Try again.").setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
        loadTable();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblRepairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblRepairMouseClicked
        int row = tblRepair.getSelectedRow();
        txtRepairid.setText(tblRepair.getValueAt(row, 0).toString());
        cmbRepairStatus.setSelectedItem(tblRepair.getValueAt(row, 3));
        txtRepairtdescription.setText(tblRepair.getValueAt(row, 4).toString());
        txtPrice.setText(tblRepair.getValueAt(row, 5).toString());
    }//GEN-LAST:event_tblRepairMouseClicked

    private void txtRepairidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRepairidActionPerformed
        try {
            RepairModel repair = new UpdateRepairController().getRepair(txtRepairid.getText());
            if(repair == null){
                new InformationBox(new javax.swing.JFrame(), true, "Something went wrong, Try again.").setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_txtRepairidActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnClear;
    private keeptoo.KButton btnUpdate;
    private javax.swing.JComboBox<String> cmbRepairStatus;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblRepairdescription;
    private javax.swing.JLabel lblRepairid;
    private javax.swing.JLabel lblRepairstatus;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JTable tblRepair;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtRepairid;
    private javax.swing.JTextField txtRepairtdescription;
    // End of variables declaration//GEN-END:variables

    private void setTheam() {
        if (state) {
            pnlBack.setBackground(Color.BLACK);
            lblPrice.setForeground(Color.WHITE);
            lblRepairdescription.setForeground(Color.WHITE);
            lblRepairid.setForeground(Color.WHITE);
            lblRepairstatus.setForeground(Color.WHITE);
            cmbRepairStatus.setForeground(Color.WHITE);
            txtPrice.setForeground(Color.WHITE);
            txtRepairid.setForeground(Color.WHITE);
            txtRepairtdescription.setForeground(Color.WHITE);
            cmbRepairStatus.setBackground(Color.BLACK);
            txtPrice.setBackground(Color.BLACK);
            txtRepairid.setBackground(Color.BLACK);
            txtRepairtdescription.setBackground(Color.BLACK);
        } else {
        }
    }

    private void loadTable() {
        try {
            List<RepairModel> list = new UpdateRepairController().getAllRepair();
            DefaultTableModel model = (DefaultTableModel) tblRepair.getModel();
            model.setRowCount(0);

            for (RepairModel repairModel : list) {
                model.addRow(new Object[]{
                    repairModel.getRepairID(),
                    repairModel.getEmployeeID(),
                    repairModel.getCustomerID(),
                    repairModel.getRepairStatus(),
                    repairModel.getRepairDescription(),
                    repairModel.getPrice()
                });
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }

    private void clearAll() {
        txtRepairid.setText("");
        txtRepairtdescription.setText("");
        txtPrice.setText("");
        cmbRepairStatus.setSelectedIndex(0);
    }
}
