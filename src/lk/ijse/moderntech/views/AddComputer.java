/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lk.ijse.moderntech.views;

import java.awt.Color;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lk.ijse.moderntech.controler.AddComputerControler;
import lk.ijse.moderntech.model.ComputerModel;
import lk.ijse.moderntech.model.SpecModel;

/**
 *
 * @author Shamal
 */
public class AddComputer extends javax.swing.JInternalFrame {

    boolean state;
    ///////////
    String ProcessorID;
    String ramID;
    String vgaID;
    String motherboardID;
    String harddrive;

    public AddComputer(boolean state) {
        initComponents();
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        this.state = state;
        setTheam();
        loadComputerID();
        loadWarranty();
        loadSpecs();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBack = new javax.swing.JPanel();
        lblWarranty = new javax.swing.JLabel();
        txtComputerid = new javax.swing.JTextField();
        lblComputerid = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox<>();
        lblType = new javax.swing.JLabel();
        cmbWarranty = new javax.swing.JComboBox<>();
        lblBrand = new javax.swing.JLabel();
        txtBrand = new javax.swing.JTextField();
        lblDescription = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        lblComputerspecs = new javax.swing.JLabel();
        lblProcessor = new javax.swing.JLabel();
        cmbProcessor = new javax.swing.JComboBox<>();
        lblRam = new javax.swing.JLabel();
        cmbRam = new javax.swing.JComboBox<>();
        lblVga = new javax.swing.JLabel();
        cmbVga = new javax.swing.JComboBox<>();
        lblMotherboard = new javax.swing.JLabel();
        cmbMotherboard = new javax.swing.JComboBox<>();
        lblharddrive = new javax.swing.JLabel();
        cmbharddrive = new javax.swing.JComboBox<>();
        btnSave = new keeptoo.KButton();
        btnClear = new keeptoo.KButton();
        btnAdd = new keeptoo.KButton();

        setBorder(null);
        setPreferredSize(new java.awt.Dimension(1310, 820));

        pnlBack.setBackground(new java.awt.Color(255, 255, 255));
        pnlBack.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblWarranty.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblWarranty.setText("Warranty :");
        pnlBack.add(lblWarranty, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 140, -1, -1));

        txtComputerid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtComputerid.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        txtComputerid.setEnabled(false);
        pnlBack.add(txtComputerid, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 320, -1));

        lblComputerid.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblComputerid.setText("Computer ID :");
        pnlBack.add(lblComputerid, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        cmbType.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Desktop", "Laptop" }));
        cmbType.setBorder(null);
        pnlBack.add(cmbType, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 130, 320, 40));

        lblType.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblType.setText("Type :");
        pnlBack.add(lblType, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 140, -1, -1));

        cmbWarranty.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbWarranty.setBorder(null);
        pnlBack.add(cmbWarranty, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 320, 40));

        lblBrand.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblBrand.setText("Brand :");
        pnlBack.add(lblBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, -1, -1));

        txtBrand.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtBrand.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtBrand, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 320, -1));

        lblDescription.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblDescription.setText("Description :");
        pnlBack.add(lblDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 270, -1, -1));

        txtDescription.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        txtDescription.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 120, 215)));
        pnlBack.add(txtDescription, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 830, -1));

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        pnlBack.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 1260, 10));

        lblComputerspecs.setFont(new java.awt.Font("Poppins", 0, 36)); // NOI18N
        lblComputerspecs.setText("Computer specs");
        pnlBack.add(lblComputerspecs, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 350, -1, -1));

        lblProcessor.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblProcessor.setText("Processor :");
        pnlBack.add(lblProcessor, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 450, -1, -1));

        cmbProcessor.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbProcessor.setBorder(null);
        cmbProcessor.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProcessorItemStateChanged(evt);
            }
        });
        pnlBack.add(cmbProcessor, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 440, 320, 40));

        lblRam.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblRam.setText("Ram :");
        pnlBack.add(lblRam, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 450, -1, -1));

        cmbRam.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbRam.setBorder(null);
        cmbRam.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbRamItemStateChanged(evt);
            }
        });
        pnlBack.add(cmbRam, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 440, 320, 40));

        lblVga.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblVga.setText("Vga :");
        pnlBack.add(lblVga, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 510, -1, -1));

        cmbVga.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbVga.setBorder(null);
        cmbVga.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbVgaItemStateChanged(evt);
            }
        });
        pnlBack.add(cmbVga, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 500, 320, 40));

        lblMotherboard.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblMotherboard.setText("Motherboard :");
        pnlBack.add(lblMotherboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(626, 510, 130, -1));

        cmbMotherboard.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbMotherboard.setBorder(null);
        cmbMotherboard.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMotherboardItemStateChanged(evt);
            }
        });
        pnlBack.add(cmbMotherboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 500, 320, 40));

        lblharddrive.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        lblharddrive.setText("Hard drive :");
        pnlBack.add(lblharddrive, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 570, -1, -1));

        cmbharddrive.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        cmbharddrive.setBorder(null);
        cmbharddrive.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbharddriveItemStateChanged(evt);
            }
        });
        pnlBack.add(cmbharddrive, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 560, 320, 40));

        btnSave.setBorder(null);
        btnSave.setText("Save");
        btnSave.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnSave.setkAllowGradient(false);
        btnSave.setkBackGroundColor(new java.awt.Color(0, 120, 215));
        btnSave.setkBorderRadius(0);
        btnSave.setkHoverColor(new java.awt.Color(0, 80, 143));
        btnSave.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        pnlBack.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 670, -1, -1));

        btnClear.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 46, 50)));
        btnClear.setForeground(new java.awt.Color(255, 46, 50));
        btnClear.setText("Clear");
        btnClear.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnClear.setkAllowGradient(false);
        btnClear.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btnClear.setkBorderRadius(0);
        btnClear.setkForeGround(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverColor(new java.awt.Color(255, 46, 50));
        btnClear.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        pnlBack.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 670, -1, -1));

        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 120, 215)));
        btnAdd.setForeground(new java.awt.Color(0, 120, 215));
        btnAdd.setText("Add");
        btnAdd.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnAdd.setkAllowGradient(false);
        btnAdd.setkBackGroundColor(new java.awt.Color(255, 255, 255));
        btnAdd.setkBorderRadius(0);
        btnAdd.setkForeGround(new java.awt.Color(0, 120, 215));
        btnAdd.setkHoverColor(new java.awt.Color(0, 120, 215));
        btnAdd.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        pnlBack.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 350, 150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbProcessorItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProcessorItemStateChanged
        try {
            ProcessorID = new AddComputerControler().getSpecID("processor", cmbProcessor.getSelectedItem().toString());
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_cmbProcessorItemStateChanged

    private void cmbRamItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbRamItemStateChanged
        try {
            ramID = new AddComputerControler().getSpecID("ram", cmbRam.getSelectedItem().toString());
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_cmbRamItemStateChanged

    private void cmbVgaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbVgaItemStateChanged
        try {
            vgaID = new AddComputerControler().getSpecID("vga", cmbVga.getSelectedItem().toString());
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_cmbVgaItemStateChanged

    private void cmbMotherboardItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMotherboardItemStateChanged
        try {
            motherboardID = new AddComputerControler().getSpecID("motherboard", cmbMotherboard.getSelectedItem().toString());
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_cmbMotherboardItemStateChanged

    private void cmbharddriveItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbharddriveItemStateChanged
        try {
            harddrive = new AddComputerControler().getSpecID("hard drive", cmbharddrive.getSelectedItem().toString());
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_cmbharddriveItemStateChanged

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearAll();
        loadComputerID();
        loadWarranty();
        loadSpecs();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        ComputerModel computer = new ComputerModel(
                txtComputerid.getText(),
                cmbWarranty.getSelectedItem().toString(),
                cmbType.getSelectedItem().toString(),
                txtBrand.getText(),
                txtDescription.getText()
        );
        List<String> list = new ArrayList();
        list.add(ProcessorID);
        list.add(ramID);
        list.add(vgaID);
        list.add(motherboardID);
        list.add(harddrive);
        
        try {
            boolean saved = new AddComputerControler().saveComputer(computer, list);
            if(saved){
                new InformationBox(new javax.swing.JFrame(), true, "Saved successfully.").setVisible(true);
            }else{
                new InformationBox(new javax.swing.JFrame(), true, "Something went wrong, Try again.").setVisible(true);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnAdd;
    private keeptoo.KButton btnClear;
    private keeptoo.KButton btnSave;
    private javax.swing.JComboBox<String> cmbMotherboard;
    private javax.swing.JComboBox<String> cmbProcessor;
    private javax.swing.JComboBox<String> cmbRam;
    private javax.swing.JComboBox<String> cmbType;
    private javax.swing.JComboBox<String> cmbVga;
    private javax.swing.JComboBox<String> cmbWarranty;
    private javax.swing.JComboBox<String> cmbharddrive;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBrand;
    private javax.swing.JLabel lblComputerid;
    private javax.swing.JLabel lblComputerspecs;
    private javax.swing.JLabel lblDescription;
    private javax.swing.JLabel lblMotherboard;
    private javax.swing.JLabel lblProcessor;
    private javax.swing.JLabel lblRam;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblVga;
    private javax.swing.JLabel lblWarranty;
    private javax.swing.JLabel lblharddrive;
    private javax.swing.JPanel pnlBack;
    private javax.swing.JTextField txtBrand;
    private javax.swing.JTextField txtComputerid;
    private javax.swing.JTextField txtDescription;
    // End of variables declaration//GEN-END:variables

    private void setTheam() {
        if (state) {
            pnlBack.setBackground(Color.BLACK);
            lblBrand.setForeground(Color.WHITE);
            lblComputerid.setForeground(Color.WHITE);
            lblComputerspecs.setForeground(Color.WHITE);
            lblDescription.setForeground(Color.WHITE);
            lblMotherboard.setForeground(Color.WHITE);
            lblProcessor.setForeground(Color.WHITE);
            lblRam.setForeground(Color.WHITE);
            lblType.setForeground(Color.WHITE);
            lblVga.setForeground(Color.WHITE);
            lblWarranty.setForeground(Color.WHITE);
            lblharddrive.setForeground(Color.WHITE);
            cmbMotherboard.setForeground(Color.WHITE);
            cmbRam.setForeground(Color.WHITE);
            cmbType.setForeground(Color.WHITE);
            cmbVga.setForeground(Color.WHITE);
            cmbWarranty.setForeground(Color.WHITE);
            cmbharddrive.setForeground(Color.WHITE);
            txtComputerid.setForeground(Color.WHITE);
            txtDescription.setForeground(Color.WHITE);
            cmbProcessor.setForeground(Color.WHITE);
            txtBrand.setForeground(Color.WHITE);
            cmbMotherboard.setBackground(Color.BLACK);
            cmbRam.setBackground(Color.BLACK);
            cmbType.setBackground(Color.BLACK);
            cmbVga.setBackground(Color.BLACK);
            cmbWarranty.setBackground(Color.BLACK);
            cmbharddrive.setBackground(Color.BLACK);
            txtComputerid.setBackground(Color.BLACK);
            txtDescription.setBackground(Color.BLACK);
            cmbProcessor.setBackground(Color.BLACK);
            txtBrand.setBackground(Color.BLACK);
        } else {

        }
    }

    private void loadComputerID() {
        try {
            String id = new AddComputerControler().getComputerID();
            txtComputerid.setText(id);
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }

    private void loadWarranty() {
        try {
            List<String> list = new AddComputerControler().getWarranty();
            for (String string : list) {
                cmbWarranty.addItem(string);
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }

    private void loadSpecs() {
        try {
            List<SpecModel> spec = new AddComputerControler().getSpecs();
            for (SpecModel specModel : spec) {
                if (specModel.getPart().equalsIgnoreCase("processor")) {
                    cmbProcessor.addItem(specModel.getValue());
                    ProcessorID = specModel.getSpec_ID();
                } else if (specModel.getPart().equalsIgnoreCase("ram")) {
                    cmbRam.addItem(specModel.getValue());
                    ramID = specModel.getSpec_ID();
                } else if (specModel.getPart().equalsIgnoreCase("vga")) {
                    cmbVga.addItem(specModel.getValue());
                    vgaID = specModel.getSpec_ID();
                } else if (specModel.getPart().equalsIgnoreCase("motherboard")) {
                    cmbMotherboard.addItem(specModel.getValue());
                    motherboardID = specModel.getSpec_ID();
                } else if (specModel.getPart().equalsIgnoreCase("hard drive")) {
                    cmbharddrive.addItem(specModel.getValue());
                    harddrive = specModel.getSpec_ID();
                }
            }
        } catch (ClassNotFoundException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Class not found exception").setVisible(true);
        } catch (SQLException ex) {
            new ErrorBox(new javax.swing.JFrame(), true, "Sql exception").setVisible(true);
        }
    }

    private void clearAll() {
        txtComputerid.setText("");
        txtDescription.setText("");
        txtBrand.setText("");
        cmbMotherboard.setSelectedIndex(0);
        cmbProcessor.setSelectedIndex(0);
        cmbRam.setSelectedIndex(0);
        cmbType.setSelectedIndex(0);
        cmbVga.setSelectedIndex(0);
        cmbWarranty.setSelectedIndex(0);
        cmbharddrive.setSelectedIndex(0);
    }
}
